<?xml version="1.0" encoding="utf-8"?>
<!--
-   FlexXB - an annotation based xml serializer for Flex and Air applications 
-   Copyright (C) 2008 Alex Ciobanu
-
-   This program is free software: you can redistribute it and/or modify
-   it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-   GNU General Public License for more details.
-
-   You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>. 
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical" creationComplete="{init();}" >
	<mx:Script>
		<![CDATA[
			import com.googlecode.flexxb.FlexXBEngine;
			import com.googlecode.flexxb.annotation.contract.AccessorType;
			import com.googlecode.flexxb.api.FxClass;
			import com.googlecode.flexxb.xml.api.XmlApiClass;
			
			import model.Department;
			import model.Person;
			
			import mx.controls.Alert;
			[Bindable]
			private var department : Department;
			[Bindable]
			private var departmentXml : XML;
			
			private function init() : void{
				department = new Department("2", "Research & Development");
				department.departmentHead = new Person("Mike","Johnson"); 
				buildAPI();
			}
			
			private function buildAPI() : void{
				var apiClass : XmlApiClass = new XmlApiClass(Person, "Person");				
				//Add class members descriptors
				apiClass.addElement("id", String, AccessorType.READ_WRITE, "ID");
				apiClass.addAttribute("firstName", String, AccessorType.READ_WRITE, "FirstName");
				apiClass.addAttribute("lastName", String, AccessorType.READ_WRITE, "LastName");
				apiClass.addAttribute("age", String, AccessorType.READ_WRITE, "Age");
				apiClass.addElement("position", String, AccessorType.READ_WRITE, "Position");
				//Set the constructpr arguments, if any
				apiClass.addArgument("firstName");
				apiClass.addArgument("lastName");
				//Register the api descriptor class in the FlexXB engine
				FlexXBEngine.instance.api.processTypeDescriptor(apiClass);
				
				apiClass = new XmlApiClass(Department);
				apiClass.alias = "CompanyDepartment";
				apiClass.defaultNamespace = new Namespace("dept", "http://myCompanyUrl.com");
				//Add clas members descriptors
				apiClass.addAttribute("id", String, AccessorType.READ_WRITE, "ID");
				apiClass.addElement("name", String, AccessorType.READ_WRITE, "DepartmentName");
				apiClass.addElement("departmentHead", Person, AccessorType.READ_WRITE, "Leader");
				//Set the constructpr arguments, if any
				apiClass.addArgument("id");
				apiClass.addArgument("name");
				//Register the api descriptor class in the FlexXB engine
				FlexXBEngine.instance.api.processTypeDescriptor(apiClass);
			}
			
			private function serialize(event : Event) : void{
				departmentXml = FlexXBEngine.instance.serialize(department);
			}
			
			private function deserialize(event : Event) : void{
				department = FlexXBEngine.instance.deserialize(departmentXml, Department) as Department;
			}
			
			private function updateXML(event : Event) : void{
				try{
					departmentXml = XML(event.target.text);
				}catch(e : Error){
					Alert.show(e.message, "Invalid XML");
				}
			}
		]]>
	</mx:Script>
	<mx:Label text="Sample 2 - Serialize and deserialize ActionScript by describing types in FlexXB API" fontWeight="bold" fontSize="16" />
	<mx:HBox verticalAlign="middle" width="100%" height="300" paddingBottom="30"
	paddingLeft="30" paddingRight="30" paddingTop="30">
		<mx:Form width="50%" height="100%">
			<mx:FormHeading label="Fill in the form to configure the department" />
			<mx:FormItem label="Dept ID">
				<mx:TextInput text="{department.id}" restrict="0123456789"
					change="{department.id = event.target.text}"/>
			</mx:FormItem>
			<mx:FormItem label="Dept Name">
				<mx:TextInput text="{department.name}"
					change="{department.name = event.target.text}"/>
			</mx:FormItem>
			<mx:FormItem label="Dept Leader First Name">
				<mx:TextInput text="{department.departmentHead.firstName}"
					change="{department.departmentHead.firstName = event.target.text}"/>
			</mx:FormItem>
			<mx:FormItem label="Dept Leader Last Name">
				<mx:TextInput  text="{department.departmentHead.lastName}"
					change="{department.departmentHead.lastName = event.target.text}"/>
			</mx:FormItem>
			<mx:FormItem label="Dept Leader Age">
				<mx:TextInput restrict="0123456789"  text="{department.departmentHead.age}"
					change="{department.departmentHead.age = Number(event.target.text)}"/>
			</mx:FormItem>
			<mx:FormItem label="Dept Leader Position">
				<mx:TextInput  text="{department.departmentHead.position}"
					change="{department.departmentHead.position = event.target.text}"/>
			</mx:FormItem>
		</mx:Form>
		<mx:VBox width="100%" horizontalAlign="center">
			<mx:Button label="Serialize >>" click="{serialize(event)}"/>
			<mx:Button label="&lt;&lt; Deserialize" click="(deserialize(event))"/>
		</mx:VBox>
		<mx:VBox width="400" height="100%">
			<mx:Label text="XML View"/>
			<mx:TextArea width="400" height="100%" text="{departmentXml.toXMLString()}" change="{updateXML(event)}" />
		</mx:VBox>
	</mx:HBox>
</mx:Application>